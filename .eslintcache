[{"C:\\webCourse\\L26\\boxes\\src\\index.js":"1","C:\\webCourse\\L26\\boxes\\src\\reportWebVitals.js":"2","C:\\webCourse\\L26\\boxes\\src\\App.js":"3","C:\\webCourse\\L26\\boxes\\src\\components\\RandomBoxColor.js":"4","C:\\webCourse\\L26\\boxes\\src\\components\\ProgramTest.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":264,"mtime":1609363312049,"results":"9","hashOfConfig":"7"},{"size":1784,"mtime":1609363140924,"results":"10","hashOfConfig":"7"},{"size":3373,"mtime":1609397929491,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nd6n0n",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\webCourse\\L26\\boxes\\src\\index.js",[],"C:\\webCourse\\L26\\boxes\\src\\reportWebVitals.js",[],"C:\\webCourse\\L26\\boxes\\src\\App.js",["24"],"C:\\webCourse\\L26\\boxes\\src\\components\\RandomBoxColor.js",["25"],"import React from 'react';\r\nimport './RandomBoxColor.css';\r\n\r\n\r\nclass RandomBoxColor extends React.Component{\r\n\r\n    constructor (props){\r\n        super (props);\r\n        this.counter = 0;\r\n        \r\n        this.state = {\r\n            // isBox : 1, \r\n            color : this.getRandomColor(),\r\n            isBox : true\r\n        }\r\n    }\r\n\r\n    componentDidMount (){ \r\n        this.boxInterval = setInterval(()=> {\r\n            this.setState({color: this.getRandomColor() }) \r\n        },1000  ); \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if (this.counter < 9){\r\n            if (this.counter >= 4 ) {\r\n                this.state.isBox = false\r\n            }\r\n            this.counter = this.counter + 1;\r\n            console.log (this.counter);\r\n            \r\n        }\r\n        else {\r\n            clearInterval (this.boxInterval);\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        alert(\"Helpppp\");\r\n    }\r\n       \r\n\r\n\r\n    getRandomColor() {\r\n        const letters = '0123456789ABCDEF';\r\n        let color = \"#\";\r\n        for (let i = 0; i < 6; i++) {\r\n            const index = Math.floor(Math.random() * 16);\r\n            color += letters[index];\r\n        }\r\n        return color;\r\n    }\r\n\r\n\r\n    render () {\r\n        //converting data to presentation:\r\n        //convert color state to style \r\n\r\n        const {color} = this.state\r\n        // console.log (this.state.isBox);\r\n        const boxStyle =  {backgroundColor: color};\r\n        \r\n        if (this.state.isBox === 1) {\r\n            console.log(this.boxStyle);\r\n        }\r\n    \r\n        return(\r\n            <>\r\n                <div className={this.state.isBox ? \"box\" : \"circle\"}  style= {boxStyle}> </div>\r\n            </>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomBoxColor;",["26","27"],"C:\\webCourse\\L26\\boxes\\src\\components\\ProgramTest.js",["28","29"],{"ruleId":"30","severity":1,"message":"31","line":3,"column":8,"nodeType":"32","messageId":"33","endLine":3,"endColumn":22},{"ruleId":"34","severity":1,"message":"35","line":28,"column":17,"nodeType":"36","endLine":28,"endColumn":27},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"30","severity":1,"message":"41","line":8,"column":12,"nodeType":"32","messageId":"33","endLine":8,"endColumn":24},{"ruleId":"30","severity":1,"message":"42","line":8,"column":26,"nodeType":"32","messageId":"33","endLine":8,"endColumn":41},"no-unused-vars","'RandomBoxColor' is defined but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-native-reassign",["43"],"no-negated-in-lhs",["44"],"'checkedState' is assigned a value but never used.","'setCheckedState' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]